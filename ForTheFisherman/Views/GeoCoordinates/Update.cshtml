@model ForTheFisherman.Models.GeoCoordinates

@* The correct overload to assign an id to a form takes 4 parameters *@
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "geoForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>GeoCoordinates</legend>

        <div class="hidden">
            @Html.HiddenFor(model => model.gcId)

            @Html.HiddenFor(model => model.latitude)
            @Html.ValidationMessageFor(model => model.latitude)

            @Html.HiddenFor(model => model.longitude)
            @Html.ValidationMessageFor(model => model.longitude)

            @* Carried over from Create view, left here for compatibility *@
            <input type="button" id="createButton" value="Get coordinates" onclick="getCoordinates()" />
        </div>

        <p>
            <span id="errorMessage"></span>
        </p>
    </fieldset>
}

@* The partial view contains a script that gets geolocation and changes decimal separator in accordance with CurrentCulture *@
@* Putting the script in a partial view instead of a .js file allows Razor syntax inside it *@
@Html.Partial("~/Views/GeoCoordinates/CultureSensitiveDecimal.cshtml")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @* Decimal comma fix: *@
    <script src="~/Scripts/jquery.validate.fix.js"></script>

    <script>
        $(function () { getCoordinates(); }); // Submits the form automatically
    </script>
}