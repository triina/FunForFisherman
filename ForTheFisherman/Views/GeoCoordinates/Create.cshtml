@model ForTheFisherman.Models.GeoCoordinates

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@* Disables the client-side validation that causes problems with decimal comma *@
@{ Html.EnableClientValidation(false); }

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>GeoCoordinates</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.gcId)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.gcId)
            @Html.ValidationMessageFor(model => model.gcId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.latitude)
            @Html.ValidationMessageFor(model => model.latitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.longitude)
            @Html.ValidationMessageFor(model => model.longitude)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@* The partial view contains a script that gets geolocation and changes decimal separator in accordance with CurrentCulture *@
@* Putting the script in a partial view instead of a .js file allows Razor syntax inside it *@
@Html.Partial("~/Views/GeoCoordinates/CultureSensitiveDecimal.cshtml")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
