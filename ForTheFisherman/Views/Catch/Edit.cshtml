@model ForTheFisherman.Models.Catch


<h2>Edit</h2>

@using (Ajax.BeginForm("Edit", "Catch", null, new AjaxOptions { UpdateTargetId = "catch" }, new { id = "catchForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Catch</legend>

       <div class="hidden">
            @Html.LabelFor(model => model.cId)
            @Html.EditorFor(model => model.cId)
          
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.weight)
            @Html.ValidationMessageFor(model => model.weight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lureweight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lureweight)
            @Html.ValidationMessageFor(model => model.lureweight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.depth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.depth)
            @Html.ValidationMessageFor(model => model.depth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("lId", String.Empty)
            @Html.ValidationMessageFor(model => model.lId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.fiId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("fiId", String.Empty)
            @Html.ValidationMessageFor(model => model.fiId)
             @Ajax.ActionLink("Add", "Create", "FishSpecies", null, new AjaxOptions { UpdateTargetId = "fishSpecies" }, new { id = "addButton" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.fsId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("fsId", String.Empty)
            @Html.ValidationMessageFor(model => model.fsId)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div id="fishSpecies"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ListFishSpecies.js"></script>

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")

    <script>
        var id = ""; // id is set in CreateSuccess view from TempData

        // Disables Ajax caching, required for IE. Another possible solution:
        // use Response.CacheControl = "No-cache" in controller methods
        $(document).ready(function () {
            $.ajaxSetup({ cache: false });
        });

        $("#addButton").click(function () {

            $("#fishSpecies").dialog(
            {

                width: 400,
                height: 600,
                autoOpen: true,
                modal: true,
                title: "Add fish species",
                close: function (event, ui) { listFishSpecies() }
            });
        });
    </script>
    <script>
        jQuery.validator.unobtrusive.parse("#fishSpecies");
    </script>
    }
